-- MySQL Script generated by MySQL Workbench
-- Thu Apr 27 21:58:43 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BD-PlayMind
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `BD-PlayMind` ;

-- -----------------------------------------------------
-- Schema BD-PlayMind
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BD-PlayMind` DEFAULT CHARACTER SET utf8 ;
USE `BD-PlayMind` ;

-- -----------------------------------------------------
-- Table `BD-PlayMind`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`user` (
  `email` VARCHAR(50) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `password` VARCHAR(350) NOT NULL,
  `rol` VARCHAR(30) NOT NULL,
  `points` INT NOT NULL,
  PRIMARY KEY (`email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`tag` (
  `id_tag` INT NOT NULL AUTO_INCREMENT,
  `name_tag` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`game` (
  `id_game` VARCHAR(10) NOT NULL,
  `name_game` VARCHAR(45) NOT NULL,
  `type_game` VARCHAR(45) NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  `value_points` INT NOT NULL,
  `FK_user` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_game`, `FK_user`),
  INDEX `fk_game_user1_idx` (`FK_user` ASC) VISIBLE,
  CONSTRAINT `fk_game_user1`
    FOREIGN KEY (`FK_user`)
    REFERENCES `BD-PlayMind`.`user` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`question` (
  `id_question` INT NOT NULL AUTO_INCREMENT,
  `question` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_question`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`image` (
  `id_img` VARCHAR(40) NOT NULL,
  `path_img` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_img`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`phrase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`phrase` (
  `id_phrase` INT NOT NULL AUTO_INCREMENT,
  `phrase` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_phrase`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`answer` (
  `id_answer` INT NOT NULL AUTO_INCREMENT,
  `answer` VARCHAR(100) NOT NULL,
  `isCorrect` TINYINT NOT NULL,
  PRIMARY KEY (`id_answer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`badge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`badge` (
  `id_badge` INT NOT NULL AUTO_INCREMENT,
  `name_badge` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_badge`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`badge_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`badge_user` (
  `FK_id_badge` INT NOT NULL,
  `FK_user_email` VARCHAR(50) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`FK_id_badge`, `FK_user_email`),
  INDEX `fk_badge_has_user_user1_idx` (`FK_user_email` ASC) VISIBLE,
  INDEX `fk_badge_has_user_badge_idx` (`FK_id_badge` ASC) VISIBLE,
  CONSTRAINT `fk_badge_has_user_badge`
    FOREIGN KEY (`FK_id_badge`)
    REFERENCES `BD-PlayMind`.`badge` (`id_badge`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_badge_has_user_user1`
    FOREIGN KEY (`FK_user_email`)
    REFERENCES `BD-PlayMind`.`user` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`game_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`game_tags` (
  `FK_id_game` VARCHAR(10) NOT NULL,
  `FK_id_tag` INT NOT NULL,
  PRIMARY KEY (`FK_id_game`, `FK_id_tag`),
  INDEX `fk_game_has_tag_tag1_idx` (`FK_id_tag` ASC) VISIBLE,
  INDEX `fk_game_has_tag_game1_idx` (`FK_id_game` ASC) VISIBLE,
  CONSTRAINT `fk_game_has_tag_game1`
    FOREIGN KEY (`FK_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_has_tag_tag1`
    FOREIGN KEY (`FK_id_tag`)
    REFERENCES `BD-PlayMind`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`question_and_answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`question_and_answer` (
  `FK_QA_id_question` INT NOT NULL,
  `FK_QA_id_aswer` INT NOT NULL,
  PRIMARY KEY (`FK_QA_id_question`, `FK_QA_id_aswer`),
  INDEX `fk_question_has_answer_answer1_idx` (`FK_QA_id_aswer` ASC) VISIBLE,
  INDEX `fk_question_has_answer_question1_idx` (`FK_QA_id_question` ASC) VISIBLE,
  CONSTRAINT `fk_question_has_answer_question1`
    FOREIGN KEY (`FK_QA_id_question`)
    REFERENCES `BD-PlayMind`.`question` (`id_question`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_has_answer_answer1`
    FOREIGN KEY (`FK_QA_id_aswer`)
    REFERENCES `BD-PlayMind`.`answer` (`id_answer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`image_and_game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`image_and_game` (
  `FK_id_img` VARCHAR(40) NOT NULL,
  `FK_id_game` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`FK_id_img`, `FK_id_game`),
  INDEX `fk_image_has_game_game1_idx` (`FK_id_game` ASC) VISIBLE,
  INDEX `fk_image_has_game_image1_idx` (`FK_id_img` ASC) VISIBLE,
  CONSTRAINT `fk_image_has_game_image1`
    FOREIGN KEY (`FK_id_img`)
    REFERENCES `BD-PlayMind`.`image` (`id_img`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_image_has_game_game1`
    FOREIGN KEY (`FK_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`phrase_has_game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`phrase_has_game` (
  `FK_id_phrase` INT NOT NULL,
  `FK_id_game` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`FK_id_phrase`, `FK_id_game`),
  INDEX `fk_phrase_has_game_game1_idx` (`FK_id_game` ASC) VISIBLE,
  INDEX `fk_phrase_has_game_phrase1_idx` (`FK_id_phrase` ASC) VISIBLE,
  CONSTRAINT `fk_phrase_has_game_phrase1`
    FOREIGN KEY (`FK_id_phrase`)
    REFERENCES `BD-PlayMind`.`phrase` (`id_phrase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_phrase_has_game_game1`
    FOREIGN KEY (`FK_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`question_and_game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`question_and_game` (
  `FK_id_question` INT NOT NULL,
  `FK_id_game` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`FK_id_question`, `FK_id_game`),
  INDEX `fk_question_has_game_game1_idx` (`FK_id_game` ASC) VISIBLE,
  INDEX `fk_question_has_game_question1_idx` (`FK_id_question` ASC) VISIBLE,
  CONSTRAINT `fk_question_has_game_question1`
    FOREIGN KEY (`FK_id_question`)
    REFERENCES `BD-PlayMind`.`question` (`id_question`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_has_game_game1`
    FOREIGN KEY (`FK_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`game_complete`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`game_complete` (
  `FK_UG_user_email` VARCHAR(50) NOT NULL,
  `FK_UG_id_game` VARCHAR(10) NOT NULL,
  `date_UG` DATE NOT NULL,
  PRIMARY KEY (`FK_UG_user_email`, `FK_UG_id_game`),
  INDEX `fk_user_has_game_game1_idx` (`FK_UG_id_game` ASC) VISIBLE,
  INDEX `fk_user_has_game_user1_idx` (`FK_UG_user_email` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_game_user1`
    FOREIGN KEY (`FK_UG_user_email`)
    REFERENCES `BD-PlayMind`.`user` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_game_game1`
    FOREIGN KEY (`FK_UG_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD-PlayMind`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD-PlayMind`.`comments` (
  `game_id_game` VARCHAR(10) NOT NULL,
  `user_email` VARCHAR(50) NOT NULL,
  `comment` VARCHAR(300) NOT NULL,
  `date_comment` DATETIME NOT NULL,
  PRIMARY KEY (`game_id_game`, `user_email`),
  INDEX `fk_game_has_user_user1_idx` (`user_email` ASC) VISIBLE,
  INDEX `fk_game_has_user_game1_idx` (`game_id_game` ASC) VISIBLE,
  CONSTRAINT `fk_game_has_user_game1`
    FOREIGN KEY (`game_id_game`)
    REFERENCES `BD-PlayMind`.`game` (`id_game`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_has_user_user1`
    FOREIGN KEY (`user_email`)
    REFERENCES `BD-PlayMind`.`user` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
